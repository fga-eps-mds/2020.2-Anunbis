"""empty message

Revision ID: 8edb48444054
Revises: 
Create Date: 2021-05-10 18:50:07.498829

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8edb48444054'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id_course', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id_course'),
    sa.UniqueConstraint('name')
    )
    op.create_table('discipline',
    sa.Column('discipline_code', sa.String(length=80), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('discipline_code')
    )
    op.create_table('professor',
    sa.Column('id_professor', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reg_professor', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id_professor'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('reg_professor')
    )
    op.create_table('course_discipline',
    sa.Column('discipline_code', sa.String(length=80), nullable=False),
    sa.Column('id_course', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discipline_code'], ['discipline.discipline_code'], ),
    sa.ForeignKeyConstraint(['id_course'], ['course.id_course'], ),
    sa.PrimaryKeyConstraint('discipline_code', 'id_course')
    )
    op.create_table('professor_discipline',
    sa.Column('discipline_code', sa.String(length=80), nullable=False),
    sa.Column('id_professor', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discipline_code'], ['discipline.discipline_code'], ),
    sa.ForeignKeyConstraint(['id_professor'], ['professor.id_professor'], ),
    sa.PrimaryKeyConstraint('discipline_code', 'id_professor')
    )
    op.create_table('student',
    sa.Column('reg_student', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('id_course', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_course'], ['course.id_course'], ),
    sa.PrimaryKeyConstraint('reg_student'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('reg_student'),
    )
    op.create_table('post',
    sa.Column('id_post', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('post_date', sa.Date(), nullable=False),
    sa.Column('didactic', sa.SmallInteger(), nullable=False),
    sa.Column('metod', sa.SmallInteger(), nullable=False),
    sa.Column('avaliations', sa.SmallInteger(), nullable=False),
    sa.Column('disponibility', sa.SmallInteger(), nullable=False),
    sa.Column('content', sa.String(length=480), nullable=False),
    sa.Column('is_anonymous', sa.Boolean(), nullable=False),
    sa.Column('discipline_code', sa.String(length=80), nullable=False),
    sa.Column('reg_student', sa.Integer(), nullable=False),
    sa.Column('id_professor', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['discipline_code'], ['discipline.discipline_code'], ),
    sa.ForeignKeyConstraint(['id_professor'], ['professor.id_professor'], ),
    sa.ForeignKeyConstraint(['reg_student'], ['student.reg_student'], ),
    sa.PrimaryKeyConstraint('id_post')
    )
    op.create_table('agree_student_post',
    sa.Column('id_post', sa.Integer(), nullable=False),
    sa.Column('reg_student', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_post'], ['post.id_post'], ),
    sa.ForeignKeyConstraint(['reg_student'], ['student.reg_student'], ),
    sa.PrimaryKeyConstraint('id_post', 'reg_student')
    )
    op.create_table('disagree_student_post',
    sa.Column('id_post', sa.Integer(), nullable=False),
    sa.Column('reg_student', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_post'], ['post.id_post'], ),
    sa.ForeignKeyConstraint(['reg_student'], ['student.reg_student'], ),
    sa.PrimaryKeyConstraint('id_post', 'reg_student')
    )
    op.create_table('report',
    sa.Column('id_report', sa.Integer(), nullable=False),
    sa.Column('id_post', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=120), nullable=False),
    sa.Column('reg_student', sa.Integer(), nullable=True),
    sa.Column('id_professor', sa.Integer(), nullable=True),
    sa.Column('offensive', sa.Boolean(), nullable=False),
    sa.Column('prejudice', sa.Boolean(), nullable=False),
    sa.Column('unrelated', sa.Boolean(), nullable=False),
    sa.Column('others', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_post'], ['post.id_post'], ),
    sa.ForeignKeyConstraint(['id_professor'], ['professor.id_professor'], ),
    sa.ForeignKeyConstraint(['reg_student'], ['student.reg_student'], ),
    sa.PrimaryKeyConstraint('id_report')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report')
    op.drop_table('disagree_student_post')
    op.drop_table('agree_student_post')
    op.drop_table('post')
    op.drop_table('student')
    op.drop_table('professor_discipline')
    op.drop_table('course_discipline')
    op.drop_table('professor')
    op.drop_table('discipline')
    op.drop_table('course')
    # ### end Alembic commands ###
